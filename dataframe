# Import python packages
import streamlit as st
import requests
import pandas as pd
from snowflake.snowpark.functions import col

# Write directly to the app
st.title(f"Customize your Smoothie :cup_with_straw:")
st.write("""Choose your favorite fruits.""")

name_on_order = st.text_input('Name on Smoothie:')
st.write('Name on smoothie will be:', name_on_order)

# Snowflake connection
cnx = st.connection("snowflake")
session = cnx.session()

# Get fruit options - modified to include SEARCH_ON if it exists
try:
    my_dataframe = session.table("smoothies.public.fruit_options").select(col('FRUIT_NAME'), col('SEARCH_ON'))
except:
    # Fallback if SEARCH_ON column doesn't exist
    my_dataframe = session.table("smoothies.public.fruit_options").select(col('FRUIT_NAME'))
    my_dataframe = my_dataframe.with_column('SEARCH_ON', col('FRUIT_NAME'))  # Use FRUIT_NAME as fallback

pd_df = my_dataframe.to_pandas()

# Multiselect using just the fruit names
ingredients_list = st.multiselect(
    'Choose up to 5 ingredients:',
    pd_df['FRUIT_NAME'].unique(),
    max_selections=5
)

if ingredients_list:
    ingredients_string = ''
    
    for fruit_chosen in ingredients_list:
        ingredients_string += fruit_chosen + ' '
        
        try:
            search_on = pd_df.loc[pd_df['FRUIT_NAME'] == fruit_chosen, 'SEARCH_ON'].iloc[0]
        except:
            search_on = fruit_chosen  # Fallback if SEARCH_ON not available
            
        st.subheader(fruit_chosen + ' Nutrition Information')
        try:
            fruityvice_response = requests.get(f"https://fruityvice.com/api/fruit/{search_on}")
            fruityvice_normalized = pd.json_normalize(fruityvice_response.json())
            st.dataframe(fruityvice_normalized, use_container_width=True)
        except:
            st.warning(f"Couldn't find nutrition info for {fruit_chosen}")

    my_insert_stmt = """INSERT INTO smoothies.public.orders(ingredients, name_on_order)
            VALUES ('""" + ingredients_string + """','""" + name_on_order + """')"""

    time_to_insert = st.button('Submit Order')
      
    if time_to_insert:
        session.sql(my_insert_stmt).collect()
        st.success('Your Smoothie is ordered!', icon="âœ…")
